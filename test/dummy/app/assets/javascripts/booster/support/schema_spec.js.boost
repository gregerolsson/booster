var schema = require('booster/support/schema');

describe('schema', function() {
  var byref = function(collection) {
    return collection.pluck('id');
  }

  var Model = Backbone.Model.extend({
    schema: {
      byRefSerialized: { type: Backbone.Collection, serialize: byref },
      notSerialized: { type: Backbone.Collection, serialize: false }
    }
  });

  _.extend(Model.prototype, schema.mixin());

  beforeEach(function() {
    this.instance = new Model({
      byRefSerialized: [{id: 123, title: "Test-123"}, {id: 321, title: "Test-321"}],
      notSerialized: [{id: 123, title: "Test-123"}, {id: 321, title: "Test-321"}]
    })
  });

  describe('serialization', function() {
    it('should allow serialization through an external function', function() {
      expect(this.instance.toJSON().byRefSerialized).toEqual([123, 321]);
    });

    it('should allow serialization to be turned off for an attribute', function() {
      expect(this.instance.toJSON().notSerialized).toEqual(undefined);
    });
  });
});